
routes-internal:
  tracks[category][type][filter] - Track model

  playlist[id][category][type][fiter] -Playlist Model
  addTracks[filter][listId]

  lists[sort][filter] - Lists Model
  addList[name]


good:
Cleatus - 15+
AnimalCollective -Feels



client Models:
  tracks:
    props:
      sort
      filter
      category
    getCategory

  playlist:
      sort
      filter
      category
      id
    tracks
    getCategory

  lists:
      sort
    getLists
    addList


playlist:
  add - list id, filter, position
  delete - list id, filter
  [move]

add
  if no position, add list id to each track



  col.find({Artist: "Future Islands"}).forEach(function(x){ col.update({_id:x._id},{$inc: {"playlist.0":i++}},false,true)})
  col.update({Artist:"Future Islands","playlist.0": {$gte: 3}},{$inc: {"playlist.0":1}},false,true) 

  col.update({Artist:"Yeasayer","playlist._id":2},{$inc : {"playlist.$.pos":1}})


col.find({Artist:"Yeasayer"},{Title:1,playlist:1})


addItems(moveThings(getLargest()))

1.find largest position

2.if position supplied, and less than largest position move things down

3.add items one by one with new increasing positions

[_id, position]



lastPosition(id, moveDown, add)

find(filter)



PLaylists
  -get lists
    [id,list_name]
  -add list(name)

Playlist
  -get tracks
    [id,name]
  -add tracks(filter)



1. find tracks to be added
2. find largest position of playlist
3. move things down if needed
4. add items one by one


Music
Playlists
  .
  .
  .
  .
Settings


playing tracks:
 -each renderer has a now playing playlist (can be saved off to user playlist, or cloned over to other renderer)
 -play position / play next / play previous

 -NowPlaying model -> playlistModel
 

Steps(Un-ordered)
1.Renderer picker
  shaking icon
2.Alphabet jumper 
3.track ordering X
4.player controls 

later
1.now playing screen
2.search
3.playlist reordering
4.settings
5.sidebar / pictures

find all tracks



